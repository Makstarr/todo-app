{"ast":null,"code":"var _jsxFileName = \"/Users/maks/Git/todo/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport AddList from './components/AddList';\nimport List from './components/List';\nimport Tasks from './components/Tasks';\nimport axios from 'axios';\nimport listSvg from \"./assets/img/list.svg\";\nimport doIt from './assets/img/do-it.png';\nimport './css/reset.css';\nimport './css/index.min.css';\nimport './css/List.min.css';\nimport './css/AddList.min.css';\nimport './css/Tasks.min.css';\nimport './css/AddTasks.min.css';\n\nfunction App() {\n  const [lists, setLists] = useState(null);\n  const [colors, setColors] = useState(null);\n  const [activeItem, setActiveItem] = useState({\n    allTasks: true\n  });\n  console.log(colors);\n  useEffect(() => {\n    axios.get('https://tojustdoit-api.herokuapp.com/lists').then(res => res.json()).then(data => {\n      // handle success\n      setColors(data);\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    }).then(function () {// always executed\n    });\n    fetch('/colors').then(res => res.json()).then(data => {\n      setColors(data);\n    });\n  }, []);\n\n  const onAddList = obj => {\n    console.log(obj);\n    setLists([...lists, obj]);\n  };\n\n  const onAddTask = (obj, id) => {\n    setLists(lists.map(i => {\n      if (i.id === id) {\n        i.tasks = [...i.tasks, obj];\n      }\n\n      return i;\n    }));\n  };\n\n  const onCompleteTask = (taskId, listId) => {\n    setLists(lists.map(list => {\n      if (list.id === listId) {\n        list.tasks.map(task => {\n          if (task.id === taskId) {\n            task.completed = !task.completed;\n          }\n\n          return task;\n        });\n      }\n\n      return list;\n    }));\n  };\n\n  const onEditTitle = (id, newTitle) => {\n    const newLists = lists.map(i => {\n      if (i.id === id) {\n        i.name = newTitle;\n      }\n\n      return i;\n    });\n    setLists(newLists);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"todo__sidebar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    items: [{\n      icon: /*#__PURE__*/React.createElement(\"img\", {\n        src: listSvg,\n        alt: \"list icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 19\n        }\n      }),\n      name: 'All tasks',\n      allTasks: true,\n      active: true\n    }],\n    activeItem: activeItem,\n    onClickItem: i => {\n      i.active = true;\n      setActiveItem(i);\n    },\n    isRemovable: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), lists ? /*#__PURE__*/React.createElement(List, {\n    items: lists,\n    onRemove: id => setLists(lists.filter(item => item.id !== id)),\n    onClickItem: i => {\n      i.active = true;\n      setActiveItem(i);\n    },\n    activeItem: activeItem,\n    isRemovable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: 10 + 'px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, \"Loading...\"), /*#__PURE__*/React.createElement(AddList, {\n    onAdd: onAddList,\n    colors: colors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"shai\",\n    src: doIt,\n    alt: \"list icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 10\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"todo__tasks\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, lists ? /*#__PURE__*/React.createElement(Tasks, {\n    onEditTitle: onEditTitle,\n    lists: !activeItem.allTasks ? [activeItem] : lists,\n    onAddTask: onAddTask,\n    onCompleteTask: onCompleteTask,\n    onDeleteTask: (taskId, listId) => {\n      setLists(lists.map(list => {\n        if (list.id === listId) {\n          list.tasks = list.tasks.filter(item => item.id !== taskId);\n        }\n\n        return list;\n      }));\n    },\n    onUpdateTask: (taskId, listId, newText) => {\n      setLists(lists.map(list => {\n        if (list.id === listId) {\n          list.tasks.find(item => item.id === taskId).text = newText;\n        }\n\n        return list;\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 16\n    }\n  }) : \"\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/maks/Git/todo/src/App.js"],"names":["React","useState","useEffect","AddList","List","Tasks","axios","doIt","App","lists","setLists","colors","setColors","activeItem","setActiveItem","allTasks","console","log","get","then","res","json","data","catch","error","fetch","onAddList","obj","onAddTask","id","map","i","tasks","onCompleteTask","taskId","listId","list","task","completed","onEditTitle","newTitle","newLists","name","icon","listSvg","active","filter","item","padding","newText","find","text"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'; \n\nimport AddList from './components/AddList'\nimport List from './components/List'\nimport Tasks from './components/Tasks'\nimport axios from 'axios'\n\nimport listSvg from  './assets/img/list.svg'\nimport doIt from  './assets/img/do-it.png'\nimport './css/reset.css';\nimport './css/index.min.css';\nimport './css/List.min.css';\nimport './css/AddList.min.css';\nimport './css/Tasks.min.css';\nimport './css/AddTasks.min.css';\n\n\nfunction App() {\n  \n  const [lists, setLists] = useState(null)\n  const [colors, setColors] = useState(null)\n  const [activeItem, setActiveItem] = useState({ \n    allTasks: true\n   })\n   console.log(colors);\n  useEffect(() => {\n    axios.get('https://tojustdoit-api.herokuapp.com/lists')\n    .then(res => res.json()).then(data => {\n        // handle success\n        setColors(data);\n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      })\n      .then(function () {\n        // always executed\n      });\n    fetch('/colors').then(res => res.json()).then(data => {\n      setColors(data)\n    });\n  }, []);\n  \n  const onAddList = (obj) =>{\n    console.log(obj)\n\n    setLists([...lists, obj])\n  }\n\n  const onAddTask = ((obj, id) =>{\n    setLists(\n      lists.map((i) => {\n        if (i.id === id){\n          i.tasks = [...i.tasks, obj]\n        }\n        return i;\n      })\n    );\n  })\n\n  const onCompleteTask=(taskId, listId)=>{\n    setLists(lists.map(list=>\n      {\n        if (list.id === listId)\n        {\n          list.tasks.map(task =>\n            {\n              if (task.id===taskId){\n                task.completed=!task.completed;\n              }\n              return task\n            }\n          )\n        }\n      return list;\n    }))\n  }\n\n  const onEditTitle = (id, newTitle) => {\n    const newLists = lists.map((i) => {\n      if (i.id===id){\n        i.name = newTitle;\n      }\n      return i\n    });\n    setLists(newLists)\n  }\n\n  return (\n    <div className=\"app\">\n    <div className=\"todo\">\n      <section className=\"todo__sidebar\">\n        <List items= {[\n          { \n            icon: <img src={listSvg} alt=\"list icon\"/>,\n            name:'All tasks',\n            allTasks: true,\n            active:true\n           }\n        ]}\n        activeItem={activeItem}\n        onClickItem={(i) => {\n          i.active=true\n          setActiveItem(i)}}\n        isRemovable={false}/>\n        {lists?(\n        <List items= {lists} \n        onRemove = {(id)=>\n          setLists(lists.filter(item => item.id !== id))}\n        onClickItem={(i) => {\n          i.active=true\n          setActiveItem(i)}}\n        activeItem={activeItem}\n        isRemovable/>\n        ) : <div style={{padding: 10 + 'px'}}>Loading...</div>}\n         <AddList onAdd={onAddList} colors={colors}/>\n         <img className =\"shai\"src={doIt} alt=\"list icon\"/>\n      </section>\n      <section className=\"todo__tasks\">\n        {lists?<Tasks \n        onEditTitle={onEditTitle} \n        lists={!activeItem.allTasks?[activeItem]:lists}\n        onAddTask={onAddTask}\n        onCompleteTask={onCompleteTask}\n        onDeleteTask={(taskId, listId) =>{\n            setLists(lists.map(list=>{\n              if(list.id === listId){\n                list.tasks = list.tasks.filter(item => item.id !== taskId)\n              }\n                return list;\n              })\n            );\n          }\n        }\n        onUpdateTask={(taskId, listId, newText)=>{\n          setLists(lists.map(list=>{\n            if(list.id === listId){\n              list.tasks.find(item => item.id === taskId).text = newText\n            }\n              return list;\n            })\n          );\n        }\n\n        }\n        />:\"\"}\n      </section>\n    </div>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}