{"ast":null,"code":"var _jsxFileName = \"/Users/maks/Git/todo/src/components/AddList.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport classNames from 'classnames';\nimport List from './List';\nimport Close from \"../assets/img/close.svg\";\n\nconst AddList = ({\n  onAdd,\n  colors\n}) => {\n  const [popUp, showPopUp] = useState(false);\n  const [selectedColor, selectColor] = useState(1);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [load, setLoad] = useState(false);\n  useEffect(() => {\n    if (colors) {\n      selectColor(colors[0][\"id\"]);\n    }\n  }, [colors]);\n\n  const addList = () => {\n    if (!inputValue) {\n      alert(\"A list without a name? Excuese me mister\");\n      return;\n    }\n\n    setLoad(true);\n    let data = {\n      id: Math.random(),\n      name: inputValue,\n      colorId: selectedColor,\n      color: colors.find(color => color.id === selectedColor)\n    };\n    console.log(data);\n    fetch('/lists-add', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;'\n      },\n      body: JSON.stringify(data)\n    }).catch(() => {\n      alert('Database error :((');\n    }).then(({}) => {\n      onAdd(data);\n      showPopUp(!popUp);\n      setInputValue(\"\");\n      selectColor(colors[0][\"id\"]);\n    }).finally(() => {\n      setLoad(false);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    onClickAdd: () => showPopUp(!popUp),\n    items: [{\n      className: 'add-list__button',\n      icon: /*#__PURE__*/React.createElement(\"svg\", {\n        width: \"15\",\n        height: \"15\",\n        viewBox: \"0 0 16 16\",\n        fill: \"none\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"path\", {\n        d: \"M8 1V15\",\n        stroke: \"#eeeeee\",\n        strokeWidth: \"2\",\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"path\", {\n        d: \"M1 8H15\",\n        stroke: \"#eeeeee\",\n        strokeWidth: \"2\",\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }\n      })),\n      name: 'Add list'\n    }],\n    isRemovable: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), popUp && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-list__popup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => showPopUp(false),\n    className: \"add-list__close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: Close,\n    alt: \"CLOSE POPUP\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"field\",\n    type: \"text\",\n    maxLength: \"250\",\n    placeholder: \"Task name\",\n    value: inputValue,\n    onChange: event => setInputValue(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"add-list__colors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, colors.map(i => /*#__PURE__*/React.createElement(\"li\", {\n    onClick: () => selectColor(i.id),\n    key: i.id,\n    className: classNames(\"add-list__circle\", i.name, {\n      'active': i.id === selectedColor\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 40\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addList,\n    className: \"add-list__button button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, load ? 'Working...' : 'Add list')));\n};\n\nexport default AddList;","map":{"version":3,"sources":["/Users/maks/Git/todo/src/components/AddList.jsx"],"names":["React","useState","useEffect","axios","classNames","List","AddList","onAdd","colors","popUp","showPopUp","selectedColor","selectColor","inputValue","setInputValue","load","setLoad","addList","alert","data","id","Math","random","name","colorId","color","find","console","log","fetch","method","headers","body","JSON","stringify","catch","then","finally","className","icon","Close","event","target","value","map","i"],"mappings":"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","sourcesContent":["import React, {useState, useEffect}  from 'react'\nimport axios from 'axios'\n\nimport classNames from 'classnames'\nimport List from './List'\nimport Close from '../assets/img/close.svg'\n\nconst AddList  = ({onAdd, colors}) =>{\n    const [popUp, showPopUp] = useState(false);\n    const [selectedColor, selectColor] = useState(1);\n    const [inputValue, setInputValue] = useState(\"\");\n    const [load, setLoad] = useState(false);\n\n    useEffect(() => {\n        if (colors){\n            selectColor(colors[0][\"id\"])\n        }\n    },[colors]);\n\n    const addList  = () =>{\n        if (!inputValue){\n            alert(\"A list without a name? Excuese me mister\");\n            return;\n        }\n        setLoad(true);\n\n        let data = {\n            id: Math.random(),\n            name:inputValue, \n            colorId: selectedColor,\n            color: colors.find(color => color.id===selectedColor)\n        };\n        console.log(data)\n        fetch('/lists-add',{\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json;'\n            },\n        body: JSON.stringify(data)})\n        .catch(()=>{\n            alert('Database error :((')\n        })\n        .then(({}) => {\n            onAdd(data);\n            showPopUp(!popUp);\n            setInputValue(\"\");\n            selectColor(colors[0][\"id\"])\n        })\n        .finally(()=>{\n            setLoad(false);\n        })\n    };\n\n    return <div  className= 'add-list'  >  \n        <List onClickAdd={() => showPopUp(!popUp)} items= {[\n            {\n            className: 'add-list__button',\n            icon: <svg width=\"15\" height=\"15\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M8 1V15\" stroke=\"#eeeeee\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n            <path d=\"M1 8H15\" stroke=\"#eeeeee\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n            </svg>,\n            name:'Add list'\n            }\n        ]}isRemovable={false}/>\n        {popUp && <div className=\"add-list__popup\">\n                <button onClick={()=>showPopUp(false)} className=\"add-list__close\">\n                    <i>\n                       {<img src={Close} alt=\"CLOSE POPUP\"/>  }\n                    </i>\n                </button>\n                \n                <input \n                className=\"field\" \n                type=\"text\" \n                maxLength = \"250\"\n                placeholder=\"Task name\" \n                value={inputValue}\n                onChange={(event)=>setInputValue(event.target.value)}/>\n\n                <ul className=\"add-list__colors\">\n                    {\n                    colors.map((i) => (<li \n                        onClick={()=>selectColor(i.id)} \n                        key={i.id} \n                        className= {classNames(\"add-list__circle\", i.name, {'active':(i.id===selectedColor)})}>\n                        </li>)) \n                    }\n                </ul>\n                <button onClick={addList} className=\"add-list__button button\">{load ? 'Working...' : 'Add list'}</button>\n            </div>}\n    </div> \n}\n\nexport default AddList;\n\n\n\n"]},"metadata":{},"sourceType":"module"}