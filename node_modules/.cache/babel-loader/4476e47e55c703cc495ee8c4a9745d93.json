{"ast":null,"code":"import React from'react';import axios from'axios';import AddTask from'./AddTask';import Task from'./Task';import Edit from\"../assets/img/edit.svg\";import Remove from\"../assets/img/remove.svg\";function Tasks(_ref){var lists=_ref.lists,onEditTitle=_ref.onEditTitle,onAddTask=_ref.onAddTask,onCompleteTask=_ref.onCompleteTask,onDeleteTask=_ref.onDeleteTask,onUpdateTask=_ref.onUpdateTask;var editTitle=function editTitle(list){var newTitle=window.prompt('Write new list title',list.name);if(newTitle){// changing state\nonEditTitle(list.id,newTitle);// changing db\nvar data={id:list.id,newName:newTitle};axios.post('https://tojustdoit-api.herokuapp.com/title-update',data).then(function(response){console.log(response);//Perform action based on response\n}).catch(function(){alert('Database error :((');});}else{return;}};var checkTask=function checkTask(task){// changing state\nonCompleteTask(task.id,task.listId);// changing db\nvar data=task;axios.post('https://tojustdoit-api.herokuapp.com/tasks-check',data).then(function(response){console.log(response);//Perform action based on response\n}).catch(function(){alert('Database error :((');});};return lists.map(function(list){return/*#__PURE__*/React.createElement(\"div\",{key:list.id,className:\"tasks\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"tasks__title \"+list.color.name},list.name,/*#__PURE__*/React.createElement(\"img\",{onClick:function onClick(){return editTitle(list);},src:Edit,alt:\"Edit icon\"})),/*#__PURE__*/React.createElement(\"ul\",{className:\"tasks__items\"},list.tasks&&list.tasks.length>0?list.tasks.map(function(i){return/*#__PURE__*/React.createElement(Task,{key:i.id,task:i,checkTask:checkTask,onDeleteTask:onDeleteTask,onUpdateTask:onUpdateTask,Edit:Edit,Remove:Remove});}):/*#__PURE__*/React.createElement(\"h2\",null,\"No tasks\")),/*#__PURE__*/React.createElement(AddTask,{list:list,onAddTask:onAddTask}));});}export default Tasks;","map":{"version":3,"sources":["/Users/maks/Git/todoapp/src/components/Tasks.jsx"],"names":["React","axios","AddTask","Task","Tasks","lists","onEditTitle","onAddTask","onCompleteTask","onDeleteTask","onUpdateTask","editTitle","list","newTitle","window","prompt","name","id","data","newName","post","then","response","console","log","catch","alert","checkTask","task","listId","map","color","Edit","tasks","length","i","Remove"],"mappings":"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","sourcesContent":["import React from 'react'\nimport axios from 'axios'\n\nimport AddTask from './AddTask'\nimport Task from './Task'\nimport Edit from '../assets/img/edit.svg';\nimport Remove from '../assets/img/remove.svg';\n\nfunction Tasks({lists, onEditTitle, onAddTask, onCompleteTask, onDeleteTask, onUpdateTask}) {\n    \n    const editTitle = (list) => {\n        let newTitle = window.prompt('Write new list title', list.name)\n        if (newTitle){\n            // changing state\n            onEditTitle(list.id, newTitle)\n            // changing db\n            let data = {id:list.id, newName:newTitle};\n            axios.post('https://tojustdoit-api.herokuapp.com/title-update', data)\n            .then(function(response){\n                console.log(response);\n            //Perform action based on response\n                })\n            .catch(()=>{\n                alert('Database error :((')\n            })\n        } else{\n            return;\n        }\n    }\n    const checkTask = (task) => {\n        // changing state\n        onCompleteTask(task.id, task.listId)\n        // changing db\n        let data = task;\n        axios.post('https://tojustdoit-api.herokuapp.com/tasks-check', data)\n            .then(function(response){\n                console.log(response);\n            //Perform action based on response\n                })\n            .catch(()=>{\n                alert('Database error :((')\n            })\n    }\n    return (\n        lists.map(list=>(\n        <div key={list.id} className=\"tasks\">\n                <h2 className={\"tasks__title \" + list.color.name}>\n                    {list.name}\n                    <img onClick={()=>editTitle(list)} src={Edit} alt=\"Edit icon\"/> \n                </h2>\n                <ul className=\"tasks__items\">\n                {list.tasks&&list.tasks.length > 0 ? (list.tasks.map((i) => (\n                    <Task \n                    key={i.id} \n                    task={i} \n                    checkTask={checkTask}\n                    onDeleteTask ={onDeleteTask}\n                    onUpdateTask={onUpdateTask}\n                    Edit = {Edit}\n                    Remove={Remove}\n                    />\n                    ))) :\n                    <h2>No tasks</h2>} \n                </ul>\n                <AddTask \n                list = {list}  \n                onAddTask={onAddTask}\n                />\n        </div>\n        ))\n    )\n}\n\nexport default Tasks;"]},"metadata":{},"sourceType":"module"}