{"ast":null,"code":"var _jsxFileName = \"/Users/maks/Git/todo/src/components/AddTask.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nexport default function AddTask({\n  onAddTask,\n  list\n}) {\n  const [popUp, showPopUp] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [load, setLoad] = useState(false);\n\n  const addTask = () => {\n    if (!inputValue) {\n      alert(\"A task without a name? Excuese me mister\");\n      return;\n    }\n\n    setLoad(true);\n    let data = {\n      listId: list.id,\n      text: inputValue,\n      completed: false\n    };\n    console.log(data);\n    fetch('/tasks-add', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;'\n      },\n      body: JSON.stringify(data)\n    }).then(() => {\n      onAddTask(data, list.id);\n      setInputValue(\"\");\n      showPopUp(false);\n    }).catch(() => {\n      alert('Database error :((');\n    }).finally(() => {\n      setLoad(false);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-task\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, !popUp ? /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => {\n      showPopUp(true);\n    },\n    className: \"add-task__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \" + Add new task\") : load ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-task__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \" Loading... \") : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-task__popup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"field\",\n    type: \"text\",\n    placeholder: \"Task name\",\n    value: inputValue,\n    onChange: event => setInputValue(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-task__buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    onClick: addTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button cancel-btn\",\n    onClick: () => {\n      showPopUp(false);\n      setInputValue(\"\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, \"Close\"))));\n}","map":{"version":3,"sources":["/Users/maks/Git/todo/src/components/AddTask.jsx"],"names":["React","useState","useEffect","axios","AddTask","onAddTask","list","popUp","showPopUp","inputValue","setInputValue","load","setLoad","addTask","alert","data","listId","id","text","completed","console","log","fetch","method","headers","body","JSON","stringify","then","catch","finally","event","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect}  from 'react'\nimport axios from 'axios'\n\nexport default function AddTask({onAddTask, list}) {\n    const [popUp, showPopUp] = useState(false);\n    const [inputValue, setInputValue] = useState(\"\");\n    const [load, setLoad] = useState(false);\n\n    \n    const addTask = () => {\n        if (!inputValue){\n            alert(\"A task without a name? Excuese me mister\");\n            return;\n        }\n        setLoad(true);\n\n        let data = {\n            listId: list.id,\n            text: inputValue, \n            completed: false}\n        console.log(data)\n       fetch('/tasks-add',{\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json;'\n        },\n        body: JSON.stringify(data)})\n        .then(() => {\n            onAddTask(data, list.id);\n            setInputValue(\"\");\n            showPopUp(false)\n        })\n        .catch(()=>{\n            alert('Database error :((')\n        })\n        .finally(()=>{\n            setLoad(false);\n        })\n    }\n\n    return (\n        <div className=\"add-task\">\n            \n           { !popUp ? (\n            <div onClick={(()=>{showPopUp(true)})} className=\"add-task__title\"> + Add new task</div>\n           ) : load ? ( \n            <div className=\"add-task__title\"> Loading... </div>\n           ) : (\n            <div className=\"add-task__popup\">\n                <input \n                className=\"field\"\n                type=\"text\" \n                placeholder=\"Task name\"\n                value={inputValue}\n                onChange={(event)=>setInputValue(event.target.value)}/>\n                <div className=\"add-task__buttons\">\n                    <button className=\"button\" onClick={addTask} >Submit</button>\n                    <button className=\"button cancel-btn\" onClick={()=>{showPopUp(false); setInputValue(\"\")}}>Close</button>\n                </div>\n            </div>) \n            }       \n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}