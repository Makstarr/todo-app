{"ast":null,"code":"import _toConsumableArray from\"/Users/maks/Git/todoapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/maks/Git/todoapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import AddList from'./components/AddList';import List from'./components/List';import Tasks from'./components/Tasks';import listSvg from\"./assets/img/list.svg\";import doIt from'./assets/img/do-it.png';import'./css/reset.css';import'./css/index.min.css';import'./css/List.min.css';import'./css/AddList.min.css';import'./css/Tasks.min.css';import'./css/AddTasks.min.css';function App(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),lists=_useState2[0],setLists=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),colors=_useState4[0],setColors=_useState4[1];var _useState5=useState({allTasks:true}),_useState6=_slicedToArray(_useState5,2),activeItem=_useState6[0],setActiveItem=_useState6[1];useEffect(function(){fetch('https://tojustdoit-api.herokuapp.com/colors').then(function(res){return res.json();}).then(function(data){setColors(data);});fetch('https://tojustdoit-api.herokuapp.com/lists').then(function(res){return res.json();}).then(function(data){setLists(data);});},[]);var onAddList=function onAddList(obj){setLists([].concat(_toConsumableArray(lists),[obj]));};var onAddTask=function onAddTask(obj,id){setLists(lists.map(function(i){if(i.id===id){i.tasks=[].concat(_toConsumableArray(i.tasks),[obj]);}return i;}));};var onCompleteTask=function onCompleteTask(taskId,listId){setLists(lists.map(function(list){if(list.id===listId){list.tasks.map(function(task){if(task.id===taskId){task.completed=!task.completed;}return task;});}return list;}));};var onEditTitle=function onEditTitle(id,newTitle){var newLists=lists.map(function(i){if(i.id===id){i.name=newTitle;}return i;});setLists(newLists);};return/*#__PURE__*/React.createElement(\"div\",{className:\"app\"},/*#__PURE__*/React.createElement(\"div\",{className:\"todo\"},/*#__PURE__*/React.createElement(\"section\",{className:\"todo__sidebar\"},/*#__PURE__*/React.createElement(List,{items:[{icon:/*#__PURE__*/React.createElement(\"img\",{src:listSvg,alt:\"list icon\"}),name:'All tasks',allTasks:true,active:true}],activeItem:activeItem,onClickItem:function onClickItem(i){i.active=true;setActiveItem(i);},isRemovable:false}),lists?/*#__PURE__*/React.createElement(List,{items:lists,onRemove:function onRemove(id){return setLists(lists.filter(function(item){return item.id!==id;}));},onClickItem:function onClickItem(i){i.active=true;setActiveItem(i);},activeItem:activeItem,isRemovable:true}):/*#__PURE__*/React.createElement(\"div\",{style:{padding:10+'px'}},\"Loading...\"),/*#__PURE__*/React.createElement(AddList,{onAdd:onAddList,colors:colors}),/*#__PURE__*/React.createElement(\"img\",{className:\"shai\",src:doIt,alt:\"list icon\"})),/*#__PURE__*/React.createElement(\"section\",{className:\"todo__tasks\"},lists?/*#__PURE__*/React.createElement(Tasks,{onEditTitle:onEditTitle,lists:!activeItem.allTasks?[activeItem]:lists,onAddTask:onAddTask,onCompleteTask:onCompleteTask,onDeleteTask:function onDeleteTask(taskId,listId){setLists(lists.map(function(list){if(list.id===listId){list.tasks=list.tasks.filter(function(item){return item.id!==taskId;});}return list;}));},onUpdateTask:function onUpdateTask(taskId,listId,newText){setLists(lists.map(function(list){if(list.id===listId){list.tasks.find(function(item){return item.id===taskId;}).text=newText;}return list;}));}}):\"\")));}export default App;","map":{"version":3,"sources":["/Users/maks/Git/todoapp/src/App.js"],"names":["React","useState","useEffect","AddList","List","Tasks","doIt","App","lists","setLists","colors","setColors","allTasks","activeItem","setActiveItem","fetch","then","res","json","data","onAddList","obj","onAddTask","id","map","i","tasks","onCompleteTask","taskId","listId","list","task","completed","onEditTitle","newTitle","newLists","name","icon","listSvg","active","filter","item","padding","newText","find","text"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'; \n\nimport AddList from './components/AddList'\nimport List from './components/List'\nimport Tasks from './components/Tasks'\n\nimport listSvg from  './assets/img/list.svg'\nimport doIt from  './assets/img/do-it.png'\nimport './css/reset.css';\nimport './css/index.min.css';\nimport './css/List.min.css';\nimport './css/AddList.min.css';\nimport './css/Tasks.min.css';\nimport './css/AddTasks.min.css';\n\n\nfunction App() {\n  \n  const [lists, setLists] = useState(null)\n  const [colors, setColors] = useState(null)\n  const [activeItem, setActiveItem] = useState({ \n    allTasks: true\n   })\n  useEffect(() => {\n    fetch('https://tojustdoit-api.herokuapp.com/colors').then(res => res.json()).then(data => {\n      setColors(data)\n    });\n    fetch('https://tojustdoit-api.herokuapp.com/lists').then(res => res.json()).then(data => {\n      setLists(data)\n    });\n  }, []);\n  \n  const onAddList = (obj) =>{\n    setLists([...lists, obj])\n  }\n\n  const onAddTask = ((obj, id) =>{\n    setLists(\n      lists.map((i) => {\n        if (i.id === id){\n          i.tasks = [...i.tasks, obj]\n        }\n        return i;\n      })\n    );\n  })\n\n  const onCompleteTask=(taskId, listId)=>{\n    setLists(lists.map(list=>\n      {\n        if (list.id === listId)\n        {\n          list.tasks.map(task =>\n            {\n              if (task.id===taskId){\n                task.completed=!task.completed;\n              }\n              return task\n            }\n          )\n        }\n      return list;\n    }))\n  }\n\n  const onEditTitle = (id, newTitle) => {\n    const newLists = lists.map((i) => {\n      if (i.id===id){\n        i.name = newTitle;\n      }\n      return i\n    });\n    setLists(newLists)\n  }\n\n  return (\n    <div className=\"app\">\n    <div className=\"todo\">\n      <section className=\"todo__sidebar\">\n        <List items= {[\n          { \n            icon: <img src={listSvg} alt=\"list icon\"/>,\n            name:'All tasks',\n            allTasks: true,\n            active:true\n           }\n        ]}\n        activeItem={activeItem}\n        onClickItem={(i) => {\n          i.active=true\n          setActiveItem(i)}}\n        isRemovable={false}/>\n        {lists?(\n        <List items= {lists} \n        onRemove = {(id)=>\n          setLists(lists.filter(item => item.id !== id))}\n        onClickItem={(i) => {\n          i.active=true\n          setActiveItem(i)}}\n        activeItem={activeItem}\n        isRemovable/>\n        ) : <div style={{padding: 10 + 'px'}}>Loading...</div>}\n         <AddList onAdd={onAddList} colors={colors}/>\n         <img className =\"shai\"src={doIt} alt=\"list icon\"/>\n      </section>\n      <section className=\"todo__tasks\">\n        {lists?<Tasks \n        onEditTitle={onEditTitle} \n        lists={!activeItem.allTasks?[activeItem]:lists}\n        onAddTask={onAddTask}\n        onCompleteTask={onCompleteTask}\n        onDeleteTask={(taskId, listId) =>{\n            setLists(lists.map(list=>{\n              if(list.id === listId){\n                list.tasks = list.tasks.filter(item => item.id !== taskId)\n              }\n                return list;\n              })\n            );\n          }\n        }\n        onUpdateTask={(taskId, listId, newText)=>{\n          setLists(lists.map(list=>{\n            if(list.id === listId){\n              list.tasks.find(item => item.id === taskId).text = newText\n            }\n              return list;\n            })\n          );\n        }\n\n        }\n        />:\"\"}\n      </section>\n    </div>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}