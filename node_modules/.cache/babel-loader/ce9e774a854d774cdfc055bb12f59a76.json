{"ast":null,"code":"var _jsxFileName = \"/Users/maks/Git/todo/src/components/Task.jsx\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport classNames from 'classnames';\nexport default function Task({\n  task,\n  checkTask,\n  onDeleteTask,\n  onUpdateTask,\n  Remove,\n  Edit\n}) {\n  const [taskText, setTaskText] = useState(task.text);\n\n  const updateTask = (taskId, listId) => {\n    onUpdateTask(taskId, listId, taskText);\n    axios.patch('http://localhost:3001/tasks/' + task.id, {\n      text: taskText\n    }).catch(() => {\n      alert('Database error :((');\n    });\n  };\n\n  const deleteTask = (taskId, listId) => {\n    onDeleteTask(taskId, listId);\n    axios.delete('http://localhost:3001/tasks/' + task.id).then(() => {//onRemove(task.id, listId)\n    }).catch(() => {\n      alert('Database error :((');\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"li\", {\n    key: task.id,\n    className: \"tasks__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"check-\" + task.id,\n    type: \"checkbox\",\n    checked: task.completed,\n    onChange: () => checkTask(task),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"check-\" + task.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    width: \"11\",\n    height: \"8\",\n    viewBox: \"0 0 11 8\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.29999 1.20001L3.79999 6.70001L1.29999 4.20001\",\n    stroke: \"white\",\n    strokeWidth: \"1.5\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"tasks__item-text\",\n    type: \"text\",\n    value: taskText,\n    onChange: event => setTaskText(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    onClick: () => updateTask(task.id, task.listId),\n    src: Edit,\n    alt: \"Edit icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    onClick: () => deleteTask(task.id, task.listId),\n    src: Remove,\n    alt: \"Remove icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/maks/Git/todo/src/components/Task.jsx"],"names":["React","useState","axios","classNames","Task","task","checkTask","onDeleteTask","onUpdateTask","Remove","Edit","taskText","setTaskText","text","updateTask","taskId","listId","patch","id","catch","alert","deleteTask","delete","then","completed","event","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport axios from 'axios'\nimport classNames from 'classnames'\n\nexport default function Task({task, checkTask, onDeleteTask, onUpdateTask, Remove, Edit}) {\n\n    const [taskText, setTaskText] = useState(task.text)\n\n    const updateTask =  (taskId, listId) => {\n        onUpdateTask(taskId, listId, taskText)\n        axios.patch('http://localhost:3001/tasks/'+task.id, {\n            text: taskText\n        }).catch(()=>{\n            alert('Database error :((')\n        });\n    }\n    \n    const deleteTask = (taskId, listId) => {\n        onDeleteTask(taskId, listId)\n        axios.delete('http://localhost:3001/tasks/'+task.id).then(()=>{\n                //onRemove(task.id, listId)\n            }).catch(()=>{\n                alert('Database error :((')\n            });\n    }\n\n    return (\n        <li key={task.id} className=\"tasks__item\">\n            <div className=\"checkbox\">\n                <input \n                id={\"check-\"+ task.id} \n                type=\"checkbox\" \n                checked={task.completed}\n                onChange={()=>checkTask(task)}\n                />\n                <label \n                htmlFor={\"check-\"+task.id} \n                >\n                    <svg width=\"11\" height=\"8\" viewBox=\"0 0 11 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M9.29999 1.20001L3.79999 6.70001L1.29999 4.20001\" stroke=\"white\" \n                        strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                    </svg>\n                </label>\n            </div> \n            <input className=\"tasks__item-text\" type=\"text\" value={taskText} onChange={event=>setTaskText(event.target.value)}/>\n            <img onClick={()=>updateTask(task.id, task.listId)} src={Edit} alt=\"Edit icon\"/> \n            <img onClick={()=>deleteTask(task.id, task.listId)} src={Remove} alt=\"Remove icon\"/> \n        </li> \n    )\n}\n"]},"metadata":{},"sourceType":"module"}