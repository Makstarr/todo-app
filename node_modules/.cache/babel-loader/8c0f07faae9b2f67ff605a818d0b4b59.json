{"ast":null,"code":"var _jsxFileName = \"/Users/maks/Git/todo/src/components/Task.jsx\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport classNames from 'classnames';\nexport default function Task({\n  task,\n  checkTask,\n  onDeleteTask,\n  onUpdateTask,\n  Remove,\n  Edit\n}) {\n  const [taskText, setTaskText] = useState(task.text);\n  const [taskTextReal, setTaskTextReal] = useState(task.text);\n  setTaskText(taskTextReal);\n\n  const updateTask = (taskId, listId) => {\n    onUpdateTask(taskId, listId, taskText);\n    axios.patch('http://localhost:3001/tasks/' + task.id, {\n      text: taskText\n    }).catch(() => {\n      alert('Database error :((');\n    });\n  };\n\n  const deleteTask = (taskId, listId) => {\n    onDeleteTask(taskId, listId);\n    axios.delete('http://localhost:3001/tasks/' + task.id).then(() => {//onRemove(task.id, listId)\n    }).catch(() => {\n      alert('Database error :((');\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setTaskTextReal(event.text.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"li\", {\n    key: task.id,\n    className: \"tasks__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"check-\" + task.id,\n    type: \"checkbox\",\n    checked: task.completed,\n    onChange: () => checkTask(task),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"check-\" + task.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    width: \"11\",\n    height: \"8\",\n    viewBox: \"0 0 11 8\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.29999 1.20001L3.79999 6.70001L1.29999 4.20001\",\n    stroke: \"white\",\n    strokeWidth: \"1.5\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: () => handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"tasks__item-text\",\n    type: \"text\",\n    value: taskText,\n    onChange: event => setTaskText(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tasks__item-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"tasks__item-submit\",\n    onClick: () => updateTask(task.id, task.listId),\n    src: Edit,\n    alt: \"Edit icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"tasks__item-delete\",\n    onClick: () => deleteTask(task.id, task.listId),\n    src: Remove,\n    alt: \"Remove icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/maks/Git/todo/src/components/Task.jsx"],"names":["React","useState","axios","classNames","Task","task","checkTask","onDeleteTask","onUpdateTask","Remove","Edit","taskText","setTaskText","text","taskTextReal","setTaskTextReal","updateTask","taskId","listId","patch","id","catch","alert","deleteTask","delete","then","handleSubmit","event","preventDefault","value","completed","target"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport axios from 'axios'\nimport classNames from 'classnames'\n\nexport default function Task({task, checkTask, onDeleteTask, onUpdateTask, Remove, Edit}) {\n\n    const [taskText, setTaskText] = useState(task.text)\n    const [taskTextReal, setTaskTextReal] = useState(task.text)\n    setTaskText(taskTextReal)\n\n    const updateTask =  (taskId, listId) => {\n        onUpdateTask(taskId, listId, taskText)\n        axios.patch('http://localhost:3001/tasks/'+task.id, {\n            text: taskText\n        }).catch(()=>{\n            alert('Database error :((')\n        });\n    }\n    \n    const deleteTask = (taskId, listId) => {\n        onDeleteTask(taskId, listId)\n        axios.delete('http://localhost:3001/tasks/'+task.id).then(()=>{\n                //onRemove(task.id, listId)\n            }).catch(()=>{\n                alert('Database error :((')\n            });\n    }\n    const handleSubmit = (event)=>{\n        event.preventDefault();\n        setTaskTextReal(event.text.value)\n    }\n    return (\n        <li key={task.id} className=\"tasks__item\">\n            <div className=\"checkbox\">\n                <input \n                id={\"check-\"+ task.id} \n                type=\"checkbox\" \n                checked={task.completed}\n                onChange={()=>checkTask(task)}\n                />\n                <label \n                htmlFor={\"check-\"+task.id} \n                >\n                    <svg width=\"11\" height=\"8\" viewBox=\"0 0 11 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M9.29999 1.20001L3.79999 6.70001L1.29999 4.20001\" stroke=\"white\" \n                        strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                    </svg>\n                </label>\n            </div> \n            <form onSubmit={()=>handleSubmit} ></form>\n            <textarea className=\"tasks__item-text\" type=\"text\" value={taskText} onChange={event=>setTaskText(event.target.value)}></textarea>\n            <div className=\"tasks__item-buttons\">\n                <img className=\"tasks__item-submit\"onClick={()=>updateTask(task.id, task.listId)} src={Edit} alt=\"Edit icon\"/> \n                <img className=\"tasks__item-delete\"onClick={()=>deleteTask(task.id, task.listId)} src={Remove} alt=\"Remove icon\"/> \n            </div>\n        </li> \n    )\n}\n"]},"metadata":{},"sourceType":"module"}