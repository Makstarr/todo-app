{"ast":null,"code":"var _jsxFileName = \"/Users/maks/Git/todoapp/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport AddList from './components/AddList';\nimport List from './components/List';\nimport Tasks from './components/Tasks';\nimport listSvg from \"./assets/img/list.svg\";\nimport doIt from './assets/img/do-it.png';\nimport './css/reset.css';\nimport './css/index.min.css';\nimport './css/List.min.css';\nimport './css/AddList.min.css';\nimport './css/Tasks.min.css';\nimport './css/AddTasks.min.css';\n\nfunction App() {\n  const [lists, setLists] = useState(null);\n  const [colors, setColors] = useState(null);\n  const [activeItem, setActiveItem] = useState(null);\n  let history = useHistory();\n  useEffect(() => {\n    fetch('https://tojustdo-api.herokuapp.com/colors').then(res => res.json()).catch(function (error) {\n      alert(`Database failed :(((\\nTry to reload the page`);\n    }).then(data => {\n      setColors(data);\n    });\n    fetch('https://tojustdo-api.herokuapp.com/lists').then(res => res.json()).catch(function (error) {\n      alert(`Database failed :((`);\n    }).then(data => {\n      setLists(data);\n    });\n  }, []);\n  useEffect(() => {\n    if (history.location.pathname.split('/')[2]) {\n      console.log(activeItem);\n      let newActiveItem = lists.find(item => item.id == history.location.pathname.split('/')[2]);\n      console.log(newActiveItem);\n      setActiveItem(newActiveItem);\n    } else {\n      setActiveItem({\n        allTasks: true,\n        id: 0\n      });\n    }\n  }, [history.location.pathname]);\n\n  const onAddList = obj => {\n    setLists([...lists, obj]);\n  };\n\n  const onAddTask = (obj, id) => {\n    setLists(lists.map(i => {\n      if (i.id === id) {\n        i.tasks = [...i.tasks, obj];\n      }\n\n      return i;\n    }));\n  };\n\n  const onCompleteTask = (taskId, listId) => {\n    setLists(lists.map(list => {\n      if (list.id === listId) {\n        list.tasks.map(task => {\n          if (task.id === taskId) {\n            task.completed = !task.completed;\n          }\n\n          return task;\n        });\n      }\n\n      return list;\n    }));\n  };\n\n  const onEditTitle = (id, newTitle) => {\n    const newLists = lists.map(i => {\n      if (i.id === id) {\n        i.name = newTitle;\n      }\n\n      return i;\n    });\n    setLists(newLists);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"todo__sidebar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    items: [{\n      icon: /*#__PURE__*/React.createElement(\"img\", {\n        src: listSvg,\n        alt: \"list icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }\n      }),\n      name: 'All tasks',\n      allTasks: true,\n      active: true,\n      id: 0\n    }],\n    setActive: i => {\n      setActiveItem(i);\n    },\n    activeItem: activeItem,\n    onClickItem: i => {\n      history.push(`/`);\n      i.active = true;\n    },\n    isRemovable: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }), lists ? /*#__PURE__*/React.createElement(List, {\n    items: lists,\n    onRemove: id => setLists(lists.filter(item => item.id !== id)),\n    onClickItem: i => {\n      history.push(`/lists/${i.id}`);\n      i.active = true;\n    },\n    activeItem: activeItem,\n    setActive: i => {\n      setActiveItem(i);\n    },\n    isRemovable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: 10 + 'px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, \"Loading...\"), /*#__PURE__*/React.createElement(AddList, {\n    onAdd: onAddList,\n    colors: colors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"shai\",\n    src: doIt,\n    alt: \"list icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"todo__tasks\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, lists ? /*#__PURE__*/React.createElement(Tasks, {\n    onEditTitle: onEditTitle,\n    lists: !activeItem.allTasks ? [activeItem] : lists,\n    onAddTask: onAddTask,\n    onCompleteTask: onCompleteTask,\n    onDeleteTask: (taskId, listId) => {\n      setLists(lists.map(list => {\n        if (list.id === listId) {\n          list.tasks = list.tasks.filter(item => item.id !== taskId);\n        }\n\n        return list;\n      }));\n    },\n    onUpdateTask: (taskId, listId, newText) => {\n      setLists(lists.map(list => {\n        if (list.id === listId) {\n          list.tasks.find(item => item.id === taskId).text = newText;\n        }\n\n        return list;\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 18\n    }\n  }) : \"\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/maks/Git/todoapp/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","Link","useHistory","AddList","List","Tasks","doIt","App","lists","setLists","colors","setColors","activeItem","setActiveItem","history","fetch","then","res","json","catch","error","alert","data","location","pathname","split","console","log","newActiveItem","find","item","id","allTasks","onAddList","obj","onAddTask","map","i","tasks","onCompleteTask","taskId","listId","list","task","completed","onEditTitle","newTitle","newLists","name","icon","listSvg","active","push","filter","padding","newText","text"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\"; \nimport { useHistory } from \"react-router-dom\";\n\n\nimport AddList from './components/AddList'\nimport List from './components/List'\nimport Tasks from './components/Tasks'\n\nimport listSvg from  './assets/img/list.svg'\nimport doIt from  './assets/img/do-it.png'\nimport './css/reset.css';\nimport './css/index.min.css';\nimport './css/List.min.css';\nimport './css/AddList.min.css';\nimport './css/Tasks.min.css';\nimport './css/AddTasks.min.css';\n\n\n\nfunction App() {\n  const [lists, setLists] = useState(null)\n  const [colors, setColors] = useState(null)\n  const [activeItem, setActiveItem] = useState(null)\n  let history = useHistory()\n\n  useEffect(() => {\n    fetch('https://tojustdo-api.herokuapp.com/colors').then(res => res.json()).catch(function(error){\n      alert(`Database failed :(((\\nTry to reload the page`)}).then(data => {\n      setColors(data)\n    });\n    fetch('https://tojustdo-api.herokuapp.com/lists').then(res => res.json()).catch(function(error){\n      alert(`Database failed :((`)}).then(data => {\n      setLists(data)\n    });\n  }, []);\n  useEffect(() => {\n    if (history.location.pathname.split('/')[2]){\n        console.log(activeItem)\n        let newActiveItem = lists.find(item=>item.id == history.location.pathname.split('/')[2])\n        console.log(newActiveItem)\n        setActiveItem(newActiveItem)\n    }\n    else {\n      setActiveItem({allTasks: true, id: 0})\n    }\n},[history.location.pathname]);\n\n  const onAddList = (obj) =>{\n    setLists([...lists, obj])\n  }\n\n  const onAddTask = ((obj, id) =>{\n    setLists(\n      lists.map((i) => {\n        if (i.id === id){\n          i.tasks = [...i.tasks, obj]\n        }\n        return i;\n      })\n    );\n  })\n\n  const onCompleteTask=(taskId, listId)=>{\n    setLists(lists.map(list=>\n      {\n        if (list.id === listId)\n        {\n          list.tasks.map(task =>\n            {\n              if (task.id===taskId){\n                task.completed=!task.completed;\n              }\n              return task\n            }\n          )\n        }\n      return list;\n    }))\n  }\n\n  const onEditTitle = (id, newTitle) => {\n    const newLists = lists.map((i) => {\n      if (i.id===id){\n        i.name = newTitle;\n      }\n      return i\n    });\n    setLists(newLists)\n  }\n\n  return (\n      <div className=\"todo\">\n        <section  className=\"todo__sidebar\">\n          <List items= {[\n            { \n              icon: <img src={listSvg} alt=\"list icon\"/>,\n              name:'All tasks',\n              allTasks: true,\n              active:true,\n              id: 0\n            }\n          ]}\n          setActive={(i)=>{setActiveItem(i)}}\n          activeItem={activeItem}\n          onClickItem={(i) => {\n            history.push(`/`);\n            i.active=true}}\n          isRemovable={false}/>\n          {lists?(\n          <List items= {lists} \n          onRemove = {(id)=>\n            setLists(lists.filter(item => item.id !== id))}\n          onClickItem={(i) => {\n            history.push(`/lists/${i.id}`);\n            i.active=true\n            }}\n          activeItem={activeItem}\n          setActive={(i)=>{setActiveItem(i)}}\n          isRemovable/>\n          ) : <div style={{padding: 10 + 'px'}}>Loading...</div>}\n          <AddList onAdd={onAddList} colors={colors}/>\n          <img className =\"shai\"src={doIt} alt=\"list icon\"/>\n        </section>\n        <section className=\"todo__tasks\">\n          {lists?<Tasks \n          onEditTitle={onEditTitle} \n          lists={!activeItem.allTasks?[activeItem]:lists}\n          onAddTask={onAddTask}\n          onCompleteTask={onCompleteTask}\n          onDeleteTask={(taskId, listId) =>{\n              setLists(lists.map(list=>{\n                if(list.id === listId){\n                  list.tasks = list.tasks.filter(item => item.id !== taskId)\n                }\n                  return list;\n                })\n              );\n            }\n          }\n          onUpdateTask={(taskId, listId, newText)=>{\n            setLists(lists.map(list=>{\n              if(list.id === listId){\n                list.tasks.find(item => item.id === taskId).text = newText\n              }\n                return list;\n              })\n            );\n          }\n        }\n          />:\"\"}\n        </section>\n      </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}