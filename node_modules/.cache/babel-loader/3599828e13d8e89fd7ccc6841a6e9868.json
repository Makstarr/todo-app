{"ast":null,"code":"var _jsxFileName = \"/Users/maks/Git/todoapp/src/components/List.jsx\";\nimport React, { useEffect } from 'react';\nimport classNames from 'classnames';\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nimport removeBtn from \"../assets/img/remove.svg\";\n\nconst List = ({\n  items,\n  isRemovable,\n  onClickAdd,\n  onClickItem,\n  onRemove,\n  activeItem,\n  setActive\n}) => {\n  let history = useHistory();\n  useEffect(() => {\n    if (activeItem) {\n      let newActiveItem = activeItem;\n      newActiveItem.id = history.location.pathname.split('/')[2];\n      setActive(\"newActiveItem\");\n    }\n  }, [history.location.pathname]);\n\n  const removeList = i => {\n    if (window.confirm('Are you sure you wanna delete this whole list?')) {\n      let data = {\n        id: i.id\n      };\n      onRemove(i.id);\n      axios.post('https://tojustdo-api.herokuapp.com/lists-delete', data).then(function (response) {\n        console.log(response); //Perform action based on response\n      }).catch(() => {\n        alert('Database error :((');\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    onClick: onClickAdd,\n    className: \"todo__list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, items ? items.map((i, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    className: classNames(i.className, {\n      'active': activeItem && activeItem.id === i.id\n    }),\n    onClick: () => onClickItem ? onClickItem(i, history) : \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, i.icon ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"i\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 28\n    }\n  }, i.icon) : /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames('circle', i.color.name, 'i'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 64\n    }\n  }, i.tasks ? i.tasks.length > 0 ? i.tasks.length : \"\" : \"\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, i.name), isRemovable ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"list__remove-icon\",\n    onClick: () => removeList(i),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 32\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: removeBtn,\n    alt: \"Remove the list button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 33\n    }\n  })) : \"\")) : \"\");\n};\n\nexport default List;","map":{"version":3,"sources":["/Users/maks/Git/todoapp/src/components/List.jsx"],"names":["React","useEffect","classNames","axios","useHistory","List","items","isRemovable","onClickAdd","onClickItem","onRemove","activeItem","setActive","history","newActiveItem","id","location","pathname","split","removeList","i","window","confirm","data","post","then","response","console","log","catch","alert","map","index","className","icon","color","name","tasks","length","removeBtn"],"mappings":"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","sourcesContent":["import React,{useEffect} from 'react'\nimport classNames from 'classnames'\nimport axios from 'axios'\nimport { useHistory } from \"react-router-dom\";\n\nimport removeBtn from '../assets/img/remove.svg'\n\nconst List = ({items, isRemovable, onClickAdd, onClickItem, onRemove, activeItem, setActive}) =>{\n    let history = useHistory()\n\n    useEffect(() => {\n        if (activeItem){\n            let newActiveItem = activeItem\n            newActiveItem.id = (history.location.pathname.split('/')[2])\n            setActive(\"newActiveItem\")\n        }\n    },[history.location.pathname]);\n\n    const removeList = (i) => {\n        if (window.confirm('Are you sure you wanna delete this whole list?')){\n            let data = {id:i.id}\n            onRemove(i.id)\n\n\n            axios.post('https://tojustdo-api.herokuapp.com/lists-delete', data)\n            .then(function(response){\n                console.log(response);\n            //Perform action based on response\n                })\n            .catch(()=>{\n                alert('Database error :((')\n            });\n        }\n    }\n    \n    return (\n        <ul onClick={onClickAdd} className=\"todo__list\" >\n            {  \n                items?(items.map((i, index) => ( \n                <li \n                key={index} \n                className={classNames(i.className, {'active': activeItem&&(activeItem.id===i.id)} )}\n                onClick={()=>onClickItem?onClickItem(i, history):\"none\"} \n                >\n                {i.icon ?  <div className='i'>{i.icon}</div> : <div className={classNames('circle', i.color.name, 'i')}>{\n                i.tasks?(i.tasks.length>0?i.tasks.length:\"\"):\"\"\n                }</div>\n                }\n                <span>{\n                i.name\n                }</span>\n                {isRemovable ? <button className=\"list__remove-icon\"  onClick={()=>removeList(i)}>  \n                                <img src={removeBtn} alt=\"Remove the list button\"/>\n                               </button> :\"\"} \n                </li>\n                ))):\"\"\n            }\n        </ul> \n    );\n};\n\nexport default List;"]},"metadata":{},"sourceType":"module"}