{"ast":null,"code":"var _jsxFileName = \"/Users/maks/Git/todo/src/components/Tasks.jsx\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport classNames from 'classnames';\nimport AddTask from './AddTask';\nimport Edit from \"../assets/img/edit.svg\";\n\nfunction Tasks({\n  list,\n  onEditTitle,\n  onAddTask,\n  onCompleteTask\n}) {\n  const editTitle = () => {\n    let newTitle = window.prompt('Write new list title', list.name);\n\n    if (newTitle) {\n      // changing state\n      onEditTitle(list.id, newTitle); // changing db\n\n      axios.patch('http://localhost:3001/lists/' + list.id, {\n        name: newTitle\n      }).catch(() => {\n        alert('Database error :((');\n      });\n    } else if (!newTitle) {} else {\n      alert(\"Empty title isn't allowed, don't brake the law!\");\n    }\n  };\n\n  const checkTask = task => {\n    // changing state\n    onCompleteTask(task.id, task.listId); // changing db\n\n    axios.patch('http://localhost:3001/tasks/' + task.id, {\n      completed: task.completed\n    }).catch(() => {\n      alert('Database error :((');\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tasks\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"tasks__title \" + list.color.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, list.name, /*#__PURE__*/React.createElement(\"img\", {\n    onClick: editTitle,\n    src: Edit,\n    alt: \"Edit icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"tasks__items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, list.tasks && list.tasks.length > 0 ? list.tasks.map(i => /*#__PURE__*/React.createElement(\"li\", {\n    key: i.id,\n    className: \"tasks__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"check-\" + i.id,\n    type: \"checkbox\",\n    checked: i.completed,\n    onChange: () => checkTask(i),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"check-\" + i.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    width: \"11\",\n    height: \"8\",\n    viewBox: \"0 0 11 8\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.29999 1.20001L3.79999 6.70001L1.29999 4.20001\",\n    stroke: \"white\",\n    strokeWidth: \"1.5\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"p\", {\n    className: classNames({\n      'line-through': i.completed\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, i.text)))) : /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, \"No tasks\")), /*#__PURE__*/React.createElement(AddTask, {\n    list: list,\n    onAddTask: onAddTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default Tasks;","map":{"version":3,"sources":["/Users/maks/Git/todo/src/components/Tasks.jsx"],"names":["React","useState","axios","classNames","AddTask","Tasks","list","onEditTitle","onAddTask","onCompleteTask","editTitle","newTitle","window","prompt","name","id","patch","catch","alert","checkTask","task","listId","completed","color","Edit","tasks","length","map","i","text"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport axios from 'axios'\n\nimport classNames from 'classnames'\nimport AddTask from './AddTask'\nimport Edit from '../assets/img/edit.svg';\n\nfunction Tasks({list, onEditTitle, onAddTask, onCompleteTask}) {\n\n\n    const editTitle = () => {\n        let newTitle = window.prompt('Write new list title', list.name)\n        if (newTitle){\n            // changing state\n            onEditTitle(list.id, newTitle)\n            // changing db\n            axios.patch('http://localhost:3001/lists/' + list.id, {\n                name: newTitle\n            }).catch(()=>{\n                alert('Database error :((')\n            })\n        } else if(!newTitle){\n\n        }else {\n            alert(\"Empty title isn't allowed, don't brake the law!\")\n        }\n    }\n    const checkTask = (task) => {\n        // changing state\n        onCompleteTask(task.id, task.listId)\n        // changing db\n        axios.patch('http://localhost:3001/tasks/' + task.id, {\n                completed: (task.completed)\n            }).catch(()=>{\n                alert('Database error :((')\n            })\n    }\n    return (\n        <div className=\"tasks\">\n            <h2 className={\"tasks__title \" + list.color.name}>{list.name}\n                <img onClick={editTitle} src={Edit} alt=\"Edit icon\"/> \n            </h2>\n            <ul className=\"tasks__items\">\n            {list.tasks&&list.tasks.length > 0 ? (list.tasks.map((i) => (\n                <li key={i.id} className=\"tasks__item\">\n                    <div className=\"checkbox\">\n                    <input \n                    id={\"check-\"+ i.id} \n                    type=\"checkbox\" \n                    checked={i.completed}\n                    onChange={()=>checkTask(i)}\n                    />\n                    <label \n                    htmlFor={\"check-\"+i.id} \n                    >\n                        <svg width=\"11\" height=\"8\" viewBox=\"0 0 11 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path d=\"M9.29999 1.20001L3.79999 6.70001L1.29999 4.20001\" stroke=\"white\" \n                            strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                        </svg>\n                    </label>\n                    <p className = {classNames({'line-through':i.completed})}>\n                        {i.text}\n                    </p>\n                    </div> \n                </li> \n                ))) :\n                <h2>No tasks</h2>} \n            </ul>\n            <AddTask list = {list}  onAddTask={onAddTask}/>\n        </div>\n    )\n}\n\nexport default Tasks;"]},"metadata":{},"sourceType":"module"}