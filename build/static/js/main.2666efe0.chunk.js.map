{"version":3,"sources":["assets/img/close.svg","assets/img/list.svg","assets/img/do-it.png","components/List.jsx","components/AddList.jsx","components/AddTask.jsx","components/Task.jsx","components/Tasks.jsx","App.js","index.js","assets/img/remove.svg","assets/img/edit.svg"],"names":["module","exports","List","items","isRemovable","onClickAdd","onClickItem","onRemove","activeItem","onClick","className","map","i","index","key","classNames","id","icon","color","name","tasks","length","window","confirm","data","axios","post","then","response","console","log","catch","alert","removeList","src","removeBtn","alt","AddList","onAdd","colors","useState","popUp","showPopUp","selectedColor","selectColor","inputValue","setInputValue","load","setLoad","useEffect","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Close","type","maxLength","placeholder","value","onChange","event","target","colorId","find","error","finally","AddTask","onAddTask","list","Math","random","listId","text","completed","Task","task","checkTask","onDeleteTask","onUpdateTask","Remove","taskText","setTaskText","taskIsUpdated","updateTaskNow","checked","htmlFor","updateText","taskId","newText","updateTask","version","x","y","fetch","method","headers","body","JSON","stringify","deleteTask","Tasks","lists","onEditTitle","onCompleteTask","newTitle","prompt","newName","editTitle","Edit","App","setLists","setColors","allTasks","setActiveItem","res","json","listSvg","active","filter","item","style","padding","obj","doIt","newLists","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2666efe0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/close.077e1d78.svg\";","module.exports = __webpack_public_path__ + \"static/media/list.b7ea4b70.svg\";","module.exports = __webpack_public_path__ + \"static/media/do-it.4e1807e1.png\";","import React from 'react'\nimport classNames from 'classnames'\nimport axios from 'axios'\n\nimport removeBtn from '../assets/img/remove.svg'\n\nconst List = ({items, isRemovable, onClickAdd, onClickItem, onRemove, activeItem}) =>{\n    const removeList = (i) => {\n        if (window.confirm('Are you sure you wanna delete this whole list?')){\n            let data = {id:i.id}\n            onRemove(i.id)\n\n\n            axios.post('https://tojustdoit-api.herokuapp.com/lists-delete', data)\n            .then(function(response){\n                console.log(response);\n            //Perform action based on response\n                })\n            .catch(()=>{\n                alert('Database error :((')\n            });\n        }\n    }\n    \n    return (\n        <ul onClick={onClickAdd} className=\"todo__list\" >\n            {  \n                items?(items.map((i, index) => ( \n                <li \n                key={index} \n                className={classNames(i.className, {'active': (activeItem&&activeItem.id===i.id)} )}\n                onClick={()=>onClickItem?onClickItem(i):\"none\"} \n                >\n                {i.icon ?  <div className='i'>{i.icon}</div> : <div className={classNames('circle', i.color.name, 'i')}>{\n                i.tasks?(i.tasks.length>0?i.tasks.length:\"\"):\"\"\n                }</div>\n                }\n                <span>{\n                i.name\n                }</span>\n                {isRemovable ? <button className=\"list__remove-icon\"  onClick={()=>removeList(i)}>  \n                                <img src={removeBtn} alt=\"Remove the list button\"/>\n                               </button> :\"\"} \n                </li>\n                ))):\"\"\n            }\n        </ul> \n    );\n};\n\nexport default List;","import React, {useState, useEffect}  from 'react'\nimport axios from 'axios'\nimport classNames from 'classnames'\n\nimport List from './List'\nimport Close from '../assets/img/close.svg'\n\nconst AddList  = ({onAdd, colors}) =>{\n    const [popUp, showPopUp] = useState(false);\n    const [selectedColor, selectColor] = useState(1);\n    const [inputValue, setInputValue] = useState(\"\");\n    const [load, setLoad] = useState(false);\n\n    useEffect(() => {\n        if (colors){\n            selectColor(colors[0][\"id\"])\n        }\n    },[colors]);\n\n    const addList  = () =>{\n        if (!inputValue){\n            alert(\"A list without a name? Excuese me mister\");\n            return;\n        }\n        setLoad(true);\n\n        let data = {\n            name:inputValue, \n            colorId: selectedColor,\n            color: colors.find(color => color.id===selectedColor),\n            tasks:[]\n        };\n        axios.post('https://tojustdoit-api.herokuapp.com/lists-add', data)\n        .then(function(response){\n            console.log(response);\n        //Perform action based on response\n            })\n            .catch(function(error){\n                console.log(error);\n        //Perform action based on error\n            })\n        .finally(()=>{\n            onAdd(data);\n            showPopUp(!popUp);\n            setInputValue(\"\");\n            selectColor(colors[0][\"id\"])\n            setLoad(false);\n        })\n    };\n\n    return <div  className= 'add-list'  >  \n        <List onClickAdd={() => showPopUp(!popUp)} items= {[\n            {\n            className: 'add-list__button',\n            icon: <svg width=\"15\" height=\"15\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M8 1V15\" stroke=\"#eeeeee\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n            <path d=\"M1 8H15\" stroke=\"#eeeeee\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n            </svg>,\n            name:'Add list'\n            }\n        ]}isRemovable={false}/>\n        {popUp && <div className=\"add-list__popup\">\n                <button onClick={()=>showPopUp(false)} className=\"add-list__close\">\n                    <i>\n                       {<img src={Close} alt=\"CLOSE POPUP\"/>  }\n                    </i>\n                </button>\n                \n                <input \n                className=\"field\" \n                type=\"text\" \n                maxLength = \"250\"\n                placeholder=\"Task name\" \n                value={inputValue}\n                onChange={(event)=>setInputValue(event.target.value)}/>\n\n                <ul className=\"add-list__colors\">\n                    {\n                    colors.map((i) => (<li \n                        onClick={()=>selectColor(i.id)} \n                        key={i.id} \n                        className= {classNames(\"add-list__circle\", i.name, {'active':(i.id===selectedColor)})}>\n                        </li>)) \n                    }\n                </ul>\n                <button onClick={addList} className=\"add-list__button button\">{load ? 'Working...' : 'Add list'}</button>\n            </div>}\n    </div> \n}\n\nexport default AddList;\n\n\n\n","import React, {useState}  from 'react'\nimport axios from 'axios'\n\nexport default function AddTask({onAddTask, list}) {\n    const [popUp, showPopUp] = useState(false);\n    const [inputValue, setInputValue] = useState(\"\");\n    const [load, setLoad] = useState(false);\n    \n    const addTask = () => {\n        if (!inputValue){\n            alert(\"A task without a name? Excuese me mister\");\n            return;\n        }\n        setLoad(true);\n\n        let data = {\n            id: (Math.random()*1000),\n            listId: list.id,\n            text: inputValue, \n            completed: false}\n\n        axios.post('https://tojustdoit-api.herokuapp.com/tasks-add', data)\n        .then(function(response){\n            console.log(response);\n        //Perform action based on response\n            })\n            .catch(function(error){\n                console.log(error);\n        //Perform action based on error\n            })\n        .then(() => {\n            onAddTask(data, list.id);\n            setInputValue(\"\");\n            showPopUp(false)\n        })\n        .catch(()=>{\n            alert('Database error :((')\n        })\n        .finally(()=>{\n            setLoad(false);\n        })\n    }\n\n    return (\n        <div className=\"add-task\">\n            \n           { !popUp ? (\n            <div onClick={(()=>{showPopUp(true)})} className=\"add-task__title\"> + Add new task</div>\n           ) : load ? ( \n            <div className=\"add-task__title\"> Loading... </div>\n           ) : (\n            <div className=\"add-task__popup\">\n                <input \n                className=\"field\"\n                type=\"text\" \n                placeholder=\"Task name\"\n                value={inputValue}\n                onChange={(event)=>setInputValue(event.target.value)}/>\n                <div className=\"add-task__buttons\">\n                    <button className=\"button\" onClick={addTask} >Submit</button>\n                    <button className=\"button cancel-btn\" onClick={()=>{showPopUp(false); setInputValue(\"\")}}>Close</button>\n                </div>\n            </div>) \n            }       \n        </div>\n    )\n}\n","import React, {useState} from 'react'\nimport classNames from 'classnames'\nimport axios from 'axios'\n\nexport default function Task({task, checkTask, onDeleteTask, onUpdateTask, Remove}) {\n\n    const [taskText, setTaskText] = useState(task.text)\n    const [taskIsUpdated, updateTaskNow] = useState(true)\n\n    const updateTask =  (taskId, listId) => {\n        onUpdateTask(taskId, listId, taskText)\n\n        let data = {id:taskId, newText:taskText};\n\n        axios.post('https://tojustdoit-api.herokuapp.com/tasks-update', data)\n        .then(function(response){\n            console.log(response);\n        //Perform action based on response\n            })\n            .catch(()=>{\n                alert('Database error :((')\n            }).finally(()=>{\n            updateTaskNow(true)\n        })\n        \n    }\n\n    const updateText = (event) =>{\n        setTaskText(event.target.value)\n        updateTaskNow(false)\n    }\n    \n    const deleteTask = (taskId, listId) => {\n        onDeleteTask(taskId, listId)\n        let data = {id:taskId};\n        fetch('/tasks-delete',{\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json;'\n            },\n            body: JSON.stringify(data)})\n            .catch(()=>{\n                alert('Database error :((')\n            })\n    }\n    return (\n        <li key={task.id} className=\"tasks__item\">\n            <div className=\"checkbox\">\n                <input \n                id={\"check-\"+ task.id} \n                type=\"checkbox\" \n                checked={task.completed}\n                onChange={()=>checkTask(task)}\n                />\n                <label \n                htmlFor={\"check-\"+task.id} \n                >\n                    <svg width=\"11\" height=\"8\" viewBox=\"0 0 11 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M9.29999 1.20001L3.79999 6.70001L1.29999 4.20001\" stroke=\"white\" \n                        strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                    </svg>\n                </label>\n            </div> \n            <textarea className={classNames(\"tasks__item-text\", {'line-through':task.completed})} type=\"text\" value={taskText} \n            onChange={event=>updateText(event)}></textarea>\n            <div className=\"tasks__item-buttons\">\n                <div className=\"tasks__item-submit\">\n                    <input \n                    className=\"tasks__item-saveChange-check\"\n                    id={\"submit-\"+ task.id} \n                    type=\"checkbox\" \n                    checked={taskIsUpdated}\n                    onChange={()=>updateTask(task.id, task.listId)}\n                    />\n                    <label \n                    className=\"tasks__item-saveChange\"\n                    htmlFor={\"submit-\"+task.id} \n                    >\n                        <svg version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\"  x=\"0px\" y=\"0px\"\n                            viewBox=\"0 0 49 49\"  fill=\"#fff\">\n                        <g>\n                            <rect x=\"27.5\" y=\"5\" width=\"6\" height=\"10\"/>\n                            <path d=\"M39.914,0H0.5v49h48V8.586L39.914,0z M10.5,2h26v16h-26V2z M39.5,47h-31V26h31V47z\"/>\n                            <path d=\"M13.5,32h7c0.553,0,1-0.447,1-1s-0.447-1-1-1h-7c-0.553,0-1,0.447-1,1S12.947,32,13.5,32z\"/>\n                            <path d=\"M13.5,36h10c0.553,0,1-0.447,1-1s-0.447-1-1-1h-10c-0.553,0-1,0.447-1,1S12.947,36,13.5,36z\"/>\n                            <path d=\"M26.5,36c0.27,0,0.52-0.11,0.71-0.29c0.18-0.19,0.29-0.45,0.29-0.71s-0.11-0.521-0.29-0.71c-0.37-0.37-1.04-0.37-1.41,0\n                                c-0.19,0.189-0.3,0.439-0.3,0.71c0,0.27,0.109,0.52,0.29,0.71C25.979,35.89,26.229,36,26.5,36z\"/>\n                        </g>\n                        </svg>\n                    </label>\n                </div>\n                <img className=\"tasks__item-delete\"onClick={()=>deleteTask(task.id, task.listId)} src={Remove} alt=\"Remove icon\"/> \n            </div>\n        </li> \n    )\n}\n","import React from 'react'\nimport axios from 'axios'\n\nimport AddTask from './AddTask'\nimport Task from './Task'\nimport Edit from '../assets/img/edit.svg';\nimport Remove from '../assets/img/remove.svg';\n\nfunction Tasks({lists, onEditTitle, onAddTask, onCompleteTask, onDeleteTask, onUpdateTask}) {\n    \n    const editTitle = (list) => {\n        let newTitle = window.prompt('Write new list title', list.name)\n        if (newTitle){\n            // changing state\n            onEditTitle(list.id, newTitle)\n            // changing db\n            let data = {id:list.id, newName:newTitle};\n            axios.post('https://tojustdoit-api.herokuapp.com/title-update', data)\n            .then(function(response){\n                console.log(response);\n            //Perform action based on response\n                })\n            .catch(()=>{\n                alert('Database error :((')\n            })\n        } else{\n            return;\n        }\n    }\n    const checkTask = (task) => {\n        // changing state\n        onCompleteTask(task.id, task.listId)\n        // changing db\n        let data = task;\n        axios.post('https://tojustdoit-api.herokuapp.com/tasks-check', data)\n            .then(function(response){\n                console.log(response);\n            //Perform action based on response\n                })\n            .catch(()=>{\n                alert('Database error :((')\n            })\n    }\n    return (\n        lists.map(list=>(\n        <div key={list.id} className=\"tasks\">\n                <h2 className={\"tasks__title \" + list.color.name}>\n                    {list.name}\n                    <img onClick={()=>editTitle(list)} src={Edit} alt=\"Edit icon\"/> \n                </h2>\n                <ul className=\"tasks__items\">\n                {list.tasks&&list.tasks.length > 0 ? (list.tasks.map((i) => (\n                    <Task \n                    key={i.id} \n                    task={i} \n                    checkTask={checkTask}\n                    onDeleteTask ={onDeleteTask}\n                    onUpdateTask={onUpdateTask}\n                    Edit = {Edit}\n                    Remove={Remove}\n                    />\n                    ))) :\n                    <h2>No tasks</h2>} \n                </ul>\n                <AddTask \n                list = {list}  \n                onAddTask={onAddTask}\n                />\n        </div>\n        ))\n    )\n}\n\nexport default Tasks;","import React, {useState, useEffect} from 'react'; \n\nimport AddList from './components/AddList'\nimport List from './components/List'\nimport Tasks from './components/Tasks'\n\nimport listSvg from  './assets/img/list.svg'\nimport doIt from  './assets/img/do-it.png'\nimport './css/reset.css';\nimport './css/index.min.css';\nimport './css/List.min.css';\nimport './css/AddList.min.css';\nimport './css/Tasks.min.css';\nimport './css/AddTasks.min.css';\n\n\nfunction App() {\n  \n  const [lists, setLists] = useState(null)\n  const [colors, setColors] = useState(null)\n  const [activeItem, setActiveItem] = useState({ \n    allTasks: true\n   })\n  useEffect(() => {\n    fetch('https://tojustdoit-api.herokuapp.com/colors').then(res => res.json()).then(data => {\n      setColors(data)\n    });\n    fetch('https://tojustdoit-api.herokuapp.com/lists').then(res => res.json()).then(data => {\n      setLists(data)\n    });\n  }, []);\n  \n  const onAddList = (obj) =>{\n    setLists([...lists, obj])\n  }\n\n  const onAddTask = ((obj, id) =>{\n    setLists(\n      lists.map((i) => {\n        if (i.id === id){\n          i.tasks = [...i.tasks, obj]\n        }\n        return i;\n      })\n    );\n  })\n\n  const onCompleteTask=(taskId, listId)=>{\n    setLists(lists.map(list=>\n      {\n        if (list.id === listId)\n        {\n          list.tasks.map(task =>\n            {\n              if (task.id===taskId){\n                task.completed=!task.completed;\n              }\n              return task\n            }\n          )\n        }\n      return list;\n    }))\n  }\n\n  const onEditTitle = (id, newTitle) => {\n    const newLists = lists.map((i) => {\n      if (i.id===id){\n        i.name = newTitle;\n      }\n      return i\n    });\n    setLists(newLists)\n  }\n\n  return (\n    <div className=\"app\">\n    <div className=\"todo\">\n      <section className=\"todo__sidebar\">\n        <List items= {[\n          { \n            icon: <img src={listSvg} alt=\"list icon\"/>,\n            name:'All tasks',\n            allTasks: true,\n            active:true\n           }\n        ]}\n        activeItem={activeItem}\n        onClickItem={(i) => {\n          i.active=true\n          setActiveItem(i)}}\n        isRemovable={false}/>\n        {lists?(\n        <List items= {lists} \n        onRemove = {(id)=>\n          setLists(lists.filter(item => item.id !== id))}\n        onClickItem={(i) => {\n          i.active=true\n          setActiveItem(i)}}\n        activeItem={activeItem}\n        isRemovable/>\n        ) : <div style={{padding: 10 + 'px'}}>Loading...</div>}\n         <AddList onAdd={onAddList} colors={colors}/>\n         <img className =\"shai\"src={doIt} alt=\"list icon\"/>\n      </section>\n      <section className=\"todo__tasks\">\n        {lists?<Tasks \n        onEditTitle={onEditTitle} \n        lists={!activeItem.allTasks?[activeItem]:lists}\n        onAddTask={onAddTask}\n        onCompleteTask={onCompleteTask}\n        onDeleteTask={(taskId, listId) =>{\n            setLists(lists.map(list=>{\n              if(list.id === listId){\n                list.tasks = list.tasks.filter(item => item.id !== taskId)\n              }\n                return list;\n              })\n            );\n          }\n        }\n        onUpdateTask={(taskId, listId, newText)=>{\n          setLists(lists.map(list=>{\n            if(list.id === listId){\n              list.tasks.find(item => item.id === taskId).text = newText\n            }\n              return list;\n            })\n          );\n        }\n\n        }\n        />:\"\"}\n      </section>\n    </div>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './css/index.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/remove.4d68f77a.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.78ee146b.svg\";"],"sourceRoot":""}